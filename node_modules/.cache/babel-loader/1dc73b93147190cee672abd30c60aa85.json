{"ast":null,"code":"var _jsxFileName = \"/home/bianca/Documents/workspace/repositories/reactapp-movies/springboot-react-keycloak/movies-ui/src/components/wizard/SearchStep.js\";\nimport React from 'react';\nimport { Form, Segment, Table } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchStep({\n  searchText,\n  isLoading,\n  movies,\n  selectedMovie,\n  handleChange,\n  handleSearchMovies,\n  handleTableSelection\n}) {\n  const movieList = movies ? movies.map(movie => {\n    const active = movie && selectedMovie && movie.imdbId === selectedMovie.imdbId ? true : false;\n    return /*#__PURE__*/_jsxDEV(Table.Row, {\n      active: active,\n      onClick: () => handleTableSelection(movie),\n      children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n        children: movie.imdbId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n        children: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n        children: movie.director\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n        children: movie.year\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, movie.imdbId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this);\n  }) : /*#__PURE__*/_jsxDEV(Table.Row, {\n    children: /*#__PURE__*/_jsxDEV(Table.Cell, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Segment, {\n    loading: isLoading,\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSearchMovies,\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        unstackable: true,\n        children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n          placeholder: \"Search for a movie title ...\",\n          id: \"searchText\",\n          value: searchText,\n          onChange: handleChange,\n          fluid: true,\n          width: 12\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Button, {\n          color: \"blue\",\n          content: \"Search\",\n          disabled: searchText.trim() === '',\n          fluid: true,\n          width: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      compact: true,\n      selectable: true,\n      children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n        children: /*#__PURE__*/_jsxDEV(Table.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"ImdbID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Director\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n        children: movieList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_c = SearchStep;\nexport default SearchStep;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchStep\");","map":{"version":3,"sources":["/home/bianca/Documents/workspace/repositories/reactapp-movies/springboot-react-keycloak/movies-ui/src/components/wizard/SearchStep.js"],"names":["React","Form","Segment","Table","SearchStep","searchText","isLoading","movies","selectedMovie","handleChange","handleSearchMovies","handleTableSelection","movieList","map","movie","active","imdbId","title","director","year","trim"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Form, Segment, Table } from 'semantic-ui-react'\n\nfunction SearchStep({ searchText, isLoading, movies, selectedMovie, handleChange, handleSearchMovies, handleTableSelection }) {\n  const movieList = movies ? movies.map(movie => {\n    const active = movie && selectedMovie && movie.imdbId === selectedMovie.imdbId ? true : false\n    return (\n      <Table.Row key={movie.imdbId} active={active} onClick={() => handleTableSelection(movie)}>\n        <Table.Cell>{movie.imdbId}</Table.Cell>\n        <Table.Cell>{movie.title}</Table.Cell>\n        <Table.Cell>{movie.director}</Table.Cell>\n        <Table.Cell>{movie.year}</Table.Cell>\n      </Table.Row>\n    )\n  }) : (<Table.Row>\n    <Table.Cell></Table.Cell>\n  </Table.Row>\n    )\n\n  return (\n    <Segment loading={isLoading}>\n      <Form onSubmit={handleSearchMovies}>\n        <Form.Group unstackable>\n          <Form.Input\n            placeholder='Search for a movie title ...'\n            id='searchText'\n            value={searchText}\n            onChange={handleChange}\n            fluid\n            width={12}\n          />\n          <Form.Button\n            color='blue'\n            content='Search'\n            disabled={searchText.trim() === ''}\n            fluid\n            width={4}\n          />\n        </Form.Group>\n      </Form>\n\n      <Table compact selectable>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>ImdbID</Table.HeaderCell>\n            <Table.HeaderCell>Title</Table.HeaderCell>\n            <Table.HeaderCell>Director</Table.HeaderCell>\n            <Table.HeaderCell>Year</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {movieList}\n        </Table.Body>\n      </Table>\n    </Segment>\n  )\n}\n\nexport default SearchStep"]},"metadata":{},"sourceType":"module"}