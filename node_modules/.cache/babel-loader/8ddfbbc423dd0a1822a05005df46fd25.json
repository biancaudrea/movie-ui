{"ast":null,"code":"var _jsxFileName = \"/home/bianca/Documents/workspace/repositories/reactapp-movies/springboot-react-keycloak/movies-ui/src/components/movie/MovieDetail.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Container, Grid } from 'semantic-ui-react';\nimport { handleLogError } from '../misc/Helpers';\nimport { moviesApi } from '../misc/MoviesApi';\nimport MovieCard from '../home/MovieCard';\nimport MovieComments from './MovieComments';\nimport MovieCommentForm from './MovieCommentForm';\nimport { withKeycloak } from '@react-keycloak/web';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MovieDetail extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      authenticated: false,\n      movie: null,\n      commentText: ''\n    };\n\n    this.handleChange = e => {\n      const {\n        id,\n        value\n      } = e.target;\n      this.setState({\n        [id]: value\n      });\n    };\n\n    this.handleAddComment = async () => {\n      const {\n        commentText\n      } = this.state;\n\n      if (!commentText) {\n        return;\n      }\n\n      const {\n        keycloak\n      } = this.props;\n      let {\n        movie\n      } = this.state;\n      const comment = {\n        text: commentText\n      };\n\n      try {\n        const response = await moviesApi.addMovieComment(movie.imdbId, comment, keycloak.token);\n        movie = response.data;\n        this.setState({\n          movie,\n          commentText: ''\n        });\n      } catch (error) {\n        handleLogError(error);\n      }\n    };\n  }\n\n  async componentDidMount() {\n    const imdbId = this.props.match.params.id;\n    const {\n      authenticated\n    } = this.props.keycloak;\n    this.setState({\n      authenticated\n    });\n\n    try {\n      const response = await moviesApi.getMovie(imdbId);\n      const movie = response.data;\n      this.setState({\n        movie\n      });\n    } catch (error) {\n      handleLogError(error);\n    }\n  }\n\n  render() {\n    const {\n      authenticated,\n      movie,\n      commentText\n    } = this.state;\n    return !movie ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        columns: 2,\n        stackable: true,\n        children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n            width: 5,\n            children: /*#__PURE__*/_jsxDEV(MovieCard, {\n              movie: movie,\n              link: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n            width: 11,\n            children: [/*#__PURE__*/_jsxDEV(MovieCommentForm, {\n              authenticated: authenticated,\n              commentText: commentText,\n              handleAddComment: this.handleAddComment,\n              handleChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MovieComments, {\n              comments: movie.comments\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default _c2 = withRouter(_c = withKeycloak(MovieDetail));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$withRouter\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/bianca/Documents/workspace/repositories/reactapp-movies/springboot-react-keycloak/movies-ui/src/components/movie/MovieDetail.js"],"names":["React","Component","withRouter","Container","Grid","handleLogError","moviesApi","MovieCard","MovieComments","MovieCommentForm","withKeycloak","MovieDetail","state","authenticated","movie","commentText","handleChange","e","id","value","target","setState","handleAddComment","keycloak","props","comment","text","response","addMovieComment","imdbId","token","data","error","componentDidMount","match","params","getMovie","render","comments"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { Container, Grid } from 'semantic-ui-react'\nimport { handleLogError } from '../misc/Helpers'\nimport { moviesApi } from '../misc/MoviesApi'\nimport MovieCard from '../home/MovieCard'\nimport MovieComments from './MovieComments'\nimport MovieCommentForm from './MovieCommentForm'\nimport { withKeycloak } from '@react-keycloak/web'\n\nclass MovieDetail extends Component {\n  state = {\n    authenticated: false,\n    movie: null,\n    commentText: ''\n  }\n\n  async componentDidMount() {\n    const imdbId = this.props.match.params.id\n    const { authenticated } = this.props.keycloak\n\n    this.setState({ authenticated })\n    try {\n      const response = await moviesApi.getMovie(imdbId)\n      const movie = response.data\n      this.setState({ movie })\n    } catch (error) {\n      handleLogError(error)\n    }\n  }\n\n  handleChange = (e) => {\n    const { id, value } = e.target\n    this.setState({ [id]: value })\n  }\n\n  handleAddComment = async () => {\n    const { commentText } = this.state\n    if (!commentText) {\n      return\n    }\n\n    const { keycloak } = this.props\n    let { movie } = this.state\n    const comment = { text: commentText }\n    try {\n      const response = await moviesApi.addMovieComment(movie.imdbId, comment, keycloak.token)\n      movie = response.data\n      this.setState({ movie, commentText: '' })\n    } catch (error) {\n      handleLogError(error)\n    }\n  }\n\n  render() {\n    const { authenticated, movie, commentText } = this.state\n    return (\n      !movie ? <></> : (\n        <Container>\n          <Grid columns={2} stackable>\n            <Grid.Row>\n              <Grid.Column width={5}>\n                <MovieCard movie={movie} link={false} />\n              </Grid.Column>\n              <Grid.Column width={11}>\n                <MovieCommentForm\n                  authenticated={authenticated}\n                  commentText={commentText}\n                  handleAddComment={this.handleAddComment}\n                  handleChange={this.handleChange}\n                />\n                <MovieComments comments={movie.comments} />\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Container>\n      )\n    )\n  }\n}\n\nexport default withRouter(withKeycloak(MovieDetail))"]},"metadata":{},"sourceType":"module"}