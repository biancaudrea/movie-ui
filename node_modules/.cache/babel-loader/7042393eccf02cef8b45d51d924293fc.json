{"ast":null,"code":"var _jsxFileName = \"/home/bianca/Documents/workspace/repositories/reactapp-movies/springboot-react-keycloak/movies-ui/src/App.js\";\nimport React from 'react';\nimport { ReactKeycloakProvider } from '@react-keycloak/web';\nimport Keycloak from 'keycloak-js';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './components/home/Home';\nimport { moviesApi } from './components/misc/MoviesApi';\nimport Navbar from './components/misc/Navbar';\nimport PrivateRoute from './components/misc/PrivateRoute';\nimport MoviesPage from './components/movies/MoviesPage';\nimport UserSettings from './components/settings/UserSettings';\nimport MovieWizard from './components/wizard/MovieWizard';\nimport MovieDetail from './components/movie/MovieDetail';\nimport { Dimmer, Header, Icon } from 'semantic-ui-react';\nimport { config } from './Constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  const keycloak = new Keycloak({\n    url: `${config.url.KEYCLOAK_BASE_URL}/auth`,\n    realm: \"SpringBootKeycloak\",\n    clientId: \"bulcharge\"\n  });\n  const initOptions = {\n    pkceMethod: 'S256'\n  };\n\n  const handleOnEvent = async (event, error) => {\n    if (event === 'onAuthSuccess') {\n      if (keycloak.authenticated) {\n        let response = await moviesApi.getUserExtrasMe(keycloak.token);\n\n        if (response.status === 404) {\n          const userExtra = {\n            avatar: keycloak.tokenParsed.preferred_username\n          };\n          response = await moviesApi.saveUserExtrasMe(keycloak.token, userExtra);\n          console.log('UserExtra created for ' + keycloak.tokenParsed.preferred_username);\n        }\n\n        keycloak['avatar'] = response.data.avatar;\n      }\n    }\n  };\n\n  const loadingComponent = /*#__PURE__*/_jsxDEV(Dimmer, {\n    inverted: true,\n    active: true,\n    page: true,\n    children: /*#__PURE__*/_jsxDEV(Header, {\n      style: {\n        color: '#4d4d4d'\n      },\n      as: \"h2\",\n      icon: true,\n      inverted: true,\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        loading: true,\n        name: \"cog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header.Content, {\n        children: [\"Keycloak is loading\", /*#__PURE__*/_jsxDEV(Header.Subheader, {\n          style: {\n            color: '#4d4d4d'\n          },\n          children: \"or running authorization code flow with PKCE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(ReactKeycloakProvider, {\n    authClient: keycloak,\n    initOptions: initOptions,\n    LoadingComponent: loadingComponent,\n    onEvent: (event, error) => handleOnEvent(event, error),\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          component: Home\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/home\",\n          component: Home\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/movies/:id\",\n          component: MovieDetail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          path: \"/movies\",\n          component: MoviesPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          path: \"/wizard\",\n          component: MovieWizard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          path: \"/settings\",\n          component: UserSettings\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          component: Home\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/bianca/Documents/workspace/repositories/reactapp-movies/springboot-react-keycloak/movies-ui/src/App.js"],"names":["React","ReactKeycloakProvider","Keycloak","BrowserRouter","Router","Route","Switch","Home","moviesApi","Navbar","PrivateRoute","MoviesPage","UserSettings","MovieWizard","MovieDetail","Dimmer","Header","Icon","config","App","keycloak","url","KEYCLOAK_BASE_URL","realm","clientId","initOptions","pkceMethod","handleOnEvent","event","error","authenticated","response","getUserExtrasMe","token","status","userExtra","avatar","tokenParsed","preferred_username","saveUserExtrasMe","console","log","data","loadingComponent","color"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { ReactKeycloakProvider } from '@react-keycloak/web'\nimport Keycloak from 'keycloak-js'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Home from './components/home/Home'\nimport { moviesApi } from './components/misc/MoviesApi'\nimport Navbar from './components/misc/Navbar'\nimport PrivateRoute from './components/misc/PrivateRoute'\nimport MoviesPage from './components/movies/MoviesPage'\nimport UserSettings from './components/settings/UserSettings'\nimport MovieWizard from './components/wizard/MovieWizard'\nimport MovieDetail from './components/movie/MovieDetail'\nimport { Dimmer, Header, Icon } from 'semantic-ui-react'\nimport { config } from './Constants'\n\nfunction App() {\n  const keycloak = new Keycloak({\n    url: `${config.url.KEYCLOAK_BASE_URL}/auth`,\n    realm: \"SpringBootKeycloak\",\n    clientId: \"bulcharge\"\n  })\n  const initOptions = { pkceMethod: 'S256' }\n\n  const handleOnEvent = async (event, error) => {\n    if (event === 'onAuthSuccess') {\n      if (keycloak.authenticated) {\n        let response = await moviesApi.getUserExtrasMe(keycloak.token)\n        if (response.status === 404) {\n          const userExtra = { avatar: keycloak.tokenParsed.preferred_username }\n          response = await moviesApi.saveUserExtrasMe(keycloak.token, userExtra)\n          console.log('UserExtra created for ' + keycloak.tokenParsed.preferred_username)\n        }\n        keycloak['avatar'] = response.data.avatar\n      }\n    }\n  }\n\n  const loadingComponent = (\n    <Dimmer inverted active={true} page>\n      <Header style={{ color: '#4d4d4d' }} as='h2' icon inverted>\n        <Icon loading name='cog' />\n        <Header.Content>Keycloak is loading\n          <Header.Subheader style={{ color: '#4d4d4d' }}>or running authorization code flow with PKCE</Header.Subheader>\n        </Header.Content>\n      </Header>\n    </Dimmer>\n  )\n\n  return (\n    <ReactKeycloakProvider\n      authClient={keycloak}\n      initOptions={initOptions}\n      LoadingComponent={loadingComponent}\n      onEvent={(event, error) => handleOnEvent(event, error)}\n    >\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route path='/' exact component={Home} />\n          <Route path='/home' component={Home} />\n          <Route path='/movies/:id' component={MovieDetail} />\n          <PrivateRoute path='/movies' component={MoviesPage} />\n          <PrivateRoute path='/wizard' component={MovieWizard} />\n          <PrivateRoute path='/settings' component={UserSettings} />\n          <Route component={Home} />\n        </Switch>\n      </Router>\n    </ReactKeycloakProvider>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}