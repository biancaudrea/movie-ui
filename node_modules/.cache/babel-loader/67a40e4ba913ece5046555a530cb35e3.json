{"ast":null,"code":"var _jsxFileName = \"/home/bianca/Documents/workspace/repositories/reactapp-movies/springboot-react-keycloak/movies-ui/src/components/wizard/MovieWizard.js\";\nimport React, { Component } from 'react';\nimport { withKeycloak } from '@react-keycloak/web';\nimport { Button, Container, Grid, Icon, Step, Divider } from 'semantic-ui-react';\nimport { handleLogError } from '../misc/Helpers';\nimport { moviesApi } from '../misc/MoviesApi';\nimport { omdbApi } from '../misc/OmdbApi';\nimport CompleteStep from './CompleteStep';\nimport FormStep from './FormStep';\nimport SearchStep from './SearchStep';\nimport { Redirect } from 'react-router-dom';\nimport { isAdmin } from '../misc/Helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass MovieWizard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      step: 1,\n      // Search Step\n      isLoading: false,\n      searchText: '',\n      movies: [],\n      selectedMovie: null,\n      // Form Step\n      imdbId: '',\n      title: '',\n      director: '',\n      year: '',\n      poster: '',\n      imdbIdError: false,\n      titleError: false,\n      directorError: false,\n      yearError: false\n    };\n\n    this.handlePreviousStep = () => {\n      let {\n        step,\n        imdbIdError,\n        titleError,\n        directorError,\n        yearError\n      } = this.state;\n\n      if (step === 2) {\n        imdbIdError = false;\n        titleError = false;\n        directorError = false;\n        yearError = false;\n      }\n\n      step = step > 1 ? step - 1 : step;\n      this.setState({\n        step,\n        imdbIdError,\n        titleError,\n        directorError,\n        yearError\n      });\n    };\n\n    this.handleNextStep = () => {\n      let {\n        step\n      } = this.state;\n\n      if (step === 2 && !this.isValidForm()) {\n        return;\n      }\n\n      step = step < 3 ? step + 1 : step;\n      this.setState({\n        step\n      });\n    };\n\n    this.handleChange = e => {\n      const {\n        id,\n        value\n      } = e.target;\n      this.setState({\n        [id]: value\n      });\n    };\n\n    this.handleTableSelection = movie => {\n      const {\n        selectedMovie\n      } = this.state;\n\n      if (movie && selectedMovie && movie.imdbId === selectedMovie.imdbId) {\n        this.setState({\n          selectedMovie: null,\n          imdbId: '',\n          title: '',\n          director: '',\n          year: '',\n          poster: ''\n        });\n      } else {\n        this.setState({\n          selectedMovie: movie,\n          imdbId: movie.imdbId,\n          title: movie.title,\n          director: movie.director,\n          year: movie.year,\n          poster: movie.poster\n        });\n      }\n    };\n\n    this.handleSearchMovies = async () => {\n      this.setState({\n        isLoading: true\n      });\n      const {\n        searchText\n      } = this.state;\n\n      try {\n        const response = await omdbApi.getMovies(searchText);\n        let movies = [];\n        const {\n          Error\n        } = response.data;\n\n        if (Error) {\n          console.log(Error);\n        } else {\n          const movie = {\n            imdbId: response.data.imdbID,\n            title: response.data.Title,\n            director: response.data.Director,\n            year: response.data.Year,\n            poster: response.data.Poster\n          };\n          movies.push(movie);\n        }\n\n        this.setState({\n          movies,\n          isLoading: false\n        });\n      } catch (error) {\n        handleLogError(error);\n      }\n    };\n\n    this.handleCreateMovie = async () => {\n      const {\n        keycloak\n      } = this.props;\n      const {\n        imdbId,\n        title,\n        director,\n        year,\n        poster\n      } = this.state;\n      const movie = {\n        imdbId,\n        title,\n        director,\n        year,\n        poster\n      };\n\n      try {\n        await moviesApi.saveMovie(movie, keycloak.token);\n        this.props.history.push(\"/home\");\n      } catch (error) {\n        handleLogError(error);\n      }\n    };\n\n    this.isValidForm = () => {\n      const {\n        imdbId,\n        title,\n        director,\n        year\n      } = this.state;\n      const imdbIdError = imdbId.trim() === '';\n      const titleError = title.trim() === '';\n      const directorError = director.trim() === '';\n      const yearError = year.trim() === '';\n      this.setState({\n        imdbIdError,\n        titleError,\n        directorError,\n        yearError\n      });\n      return imdbIdError || titleError || directorError || yearError ? false : true;\n    };\n\n    this.getContent = () => {\n      const {\n        step\n      } = this.state;\n      let stepContent = null;\n\n      if (step === 1) {\n        const {\n          isLoading,\n          searchText,\n          movies,\n          selectedMovie\n        } = this.state;\n        stepContent = /*#__PURE__*/_jsxDEV(SearchStep, {\n          searchText: searchText,\n          isLoading: isLoading,\n          movies: movies,\n          selectedMovie: selectedMovie,\n          handleChange: this.handleChange,\n          handleSearchMovies: this.handleSearchMovies,\n          handleTableSelection: this.handleTableSelection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }, this);\n      } else if (step === 2) {\n        const {\n          imdbId,\n          title,\n          director,\n          year,\n          poster,\n          imdbIdError,\n          titleError,\n          directorError,\n          yearError\n        } = this.state;\n        stepContent = /*#__PURE__*/_jsxDEV(FormStep, {\n          imdbId: imdbId,\n          title: title,\n          director: director,\n          year: year,\n          poster: poster,\n          imdbIdError: imdbIdError,\n          titleError: titleError,\n          directorError: directorError,\n          yearError: yearError,\n          handleChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }, this);\n      } else if (step === 3) {\n        const {\n          imdbId,\n          title,\n          director,\n          year,\n          poster\n        } = this.state;\n        const movie = {\n          imdbId,\n          title,\n          director,\n          year,\n          poster\n        };\n        stepContent = /*#__PURE__*/_jsxDEV(CompleteStep, {\n          movie: movie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 9\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          columns: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n            mobile: 16,\n            tablet: 4,\n            computer: 4,\n            children: [/*#__PURE__*/_jsxDEV(Step.Group, {\n              fluid: true,\n              vertical: true,\n              children: [/*#__PURE__*/_jsxDEV(Step, {\n                active: step === 1,\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  name: \"search\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Step.Content, {\n                  children: [/*#__PURE__*/_jsxDEV(Step.Title, {\n                    children: \"Search\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Step.Description, {\n                    children: \"Search movie\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Step, {\n                active: step === 2,\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  name: \"film\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Step.Content, {\n                  children: [/*#__PURE__*/_jsxDEV(Step.Title, {\n                    children: \"Movie\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Step.Description, {\n                    children: \"Movie Form\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Step, {\n                active: step === 3,\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  name: \"flag checkered\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Step.Content, {\n                  children: [/*#__PURE__*/_jsxDEV(Step.Title, {\n                    children: \"Complete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Step.Description, {\n                    children: \"Preview and complete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button.Group, {\n              fluid: true,\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                disabled: step === 1,\n                onClick: this.handlePreviousStep,\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Button.Or, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                positive: true,\n                disabled: step === 3,\n                onClick: this.handleNextStep,\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 13\n            }, this), step === 3 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                fluid: true,\n                color: \"blue\",\n                onClick: this.handleCreateMovie,\n                children: \"Create\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n            mobile: 16,\n            tablet: 12,\n            computer: 12,\n            children: stepContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 7\n      }, this);\n    };\n  }\n\n  render() {\n    const {\n      keycloak\n    } = this.props;\n    return keycloak && keycloak.authenticated && isAdmin(keycloak) ? this.getContent() : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 90\n    }, this);\n  }\n\n}\n\nexport default _c = withKeycloak(MovieWizard);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/bianca/Documents/workspace/repositories/reactapp-movies/springboot-react-keycloak/movies-ui/src/components/wizard/MovieWizard.js"],"names":["React","Component","withKeycloak","Button","Container","Grid","Icon","Step","Divider","handleLogError","moviesApi","omdbApi","CompleteStep","FormStep","SearchStep","Redirect","isAdmin","MovieWizard","state","step","isLoading","searchText","movies","selectedMovie","imdbId","title","director","year","poster","imdbIdError","titleError","directorError","yearError","handlePreviousStep","setState","handleNextStep","isValidForm","handleChange","e","id","value","target","handleTableSelection","movie","handleSearchMovies","response","getMovies","Error","data","console","log","imdbID","Title","Director","Year","Poster","push","error","handleCreateMovie","keycloak","props","saveMovie","token","history","trim","getContent","stepContent","render","authenticated"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { withKeycloak } from '@react-keycloak/web'\nimport { Button, Container, Grid, Icon, Step, Divider } from 'semantic-ui-react'\nimport { handleLogError } from '../misc/Helpers'\nimport { moviesApi } from '../misc/MoviesApi'\nimport { omdbApi } from '../misc/OmdbApi'\nimport CompleteStep from './CompleteStep'\nimport FormStep from './FormStep'\nimport SearchStep from './SearchStep'\nimport { Redirect } from 'react-router-dom'\nimport { isAdmin } from '../misc/Helpers'\n\nclass MovieWizard extends Component {\n  state = {\n    step: 1,\n\n    // Search Step\n    isLoading: false,\n    searchText: '',\n    movies: [],\n    selectedMovie: null,\n\n    // Form Step\n    imdbId: '',\n    title: '',\n    director: '',\n    year: '',\n    poster: '',\n    imdbIdError: false,\n    titleError: false,\n    directorError: false,\n    yearError: false\n  }\n\n  handlePreviousStep = () => {\n    let { step, imdbIdError, titleError, directorError, yearError } = this.state\n\n    if (step === 2) {\n      imdbIdError = false\n      titleError = false\n      directorError = false\n      yearError = false\n    }\n\n    step = step > 1 ? step - 1 : step\n    this.setState({ step, imdbIdError, titleError, directorError, yearError })\n  }\n\n  handleNextStep = () => {\n    let { step } = this.state\n\n    if (step === 2 && !this.isValidForm()) {\n      return\n    }\n\n    step = step < 3 ? step + 1 : step\n    this.setState({ step })\n  }\n\n  handleChange = (e) => {\n    const { id, value } = e.target\n    this.setState({ [id]: value })\n  }\n\n  handleTableSelection = (movie) => {\n    const { selectedMovie } = this.state\n\n    if (movie && selectedMovie && movie.imdbId === selectedMovie.imdbId) {\n      this.setState({\n        selectedMovie: null,\n        imdbId: '',\n        title: '',\n        director: '',\n        year: '',\n        poster: ''\n      })\n    } else {\n      this.setState({\n        selectedMovie: movie,\n        imdbId: movie.imdbId,\n        title: movie.title,\n        director: movie.director,\n        year: movie.year,\n        poster: movie.poster\n      })\n    }\n  }\n\n  handleSearchMovies = async () => {\n    this.setState({ isLoading: true })\n    const {searchText} = this.state\n\n    try {\n      const response = await omdbApi.getMovies(searchText)\n      let movies = []\n        const { Error } = response.data\n        if (Error) {\n          console.log(Error)\n        } else {\n          const movie = {\n            imdbId: response.data.imdbID,\n            title: response.data.Title,\n            director: response.data.Director,\n            year: response.data.Year,\n            poster: response.data.Poster\n          }\n          movies.push(movie)\n        }\n        this.setState({ movies, isLoading: false })\n    } catch (error) {\n      handleLogError(error)\n    }\n  }\n\n  handleCreateMovie = async () => {\n    const { keycloak } = this.props\n    const { imdbId, title, director, year, poster } = this.state\n    \n    const movie = { imdbId, title, director, year, poster }\n    try {\n      await moviesApi.saveMovie(movie, keycloak.token)\n      this.props.history.push(\"/home\")\n    } catch (error) {\n      handleLogError(error)\n    }\n  }\n\n  isValidForm = () => {\n    const {imdbId, title, director, year} = this.state\n\n    const imdbIdError = imdbId.trim() === ''\n    const titleError = title.trim() === ''\n    const directorError = director.trim() === ''\n    const yearError = year.trim() === ''\n\n    this.setState({ imdbIdError, titleError, directorError, yearError })\n    return (imdbIdError || titleError || directorError || yearError) ? false : true\n  }\n\n  getContent = () => {\n    const { step } = this.state\n\n    let stepContent = null\n    if (step === 1) {\n      const { isLoading, searchText, movies, selectedMovie } = this.state\n      stepContent = (\n        <SearchStep\n          searchText={searchText}\n          isLoading={isLoading}\n          movies={movies}\n          selectedMovie={selectedMovie}\n          handleChange={this.handleChange}\n          handleSearchMovies={this.handleSearchMovies}\n          handleTableSelection={this.handleTableSelection}\n        />\n      )\n    } else if (step === 2) {\n      const { imdbId, title, director, year, poster, imdbIdError, titleError, directorError, yearError } = this.state\n      stepContent = (\n        <FormStep\n          imdbId={imdbId}\n          title={title}\n          director={director}\n          year={year}\n          poster={poster}\n          imdbIdError={imdbIdError}\n          titleError={titleError}\n          directorError={directorError}\n          yearError={yearError}\n          handleChange={this.handleChange}\n        />\n      )\n    } else if (step === 3) {\n      const { imdbId, title, director, year, poster } = this.state\n      const movie = { imdbId, title, director, year, poster }\n      stepContent = (\n        <CompleteStep movie={movie} />\n      )\n    }\n\n    return (\n      <Container>\n        <Grid columns={2}>\n          <Grid.Column mobile={16} tablet={4} computer={4}>\n            <Step.Group fluid vertical >\n              <Step active={step === 1}>\n                <Icon name='search' />\n                <Step.Content>\n                  <Step.Title>Search</Step.Title>\n                  <Step.Description>Search movie</Step.Description>\n                </Step.Content>\n              </Step>\n\n              <Step active={step === 2}>\n                <Icon name='film' />\n                <Step.Content>\n                  <Step.Title>Movie</Step.Title>\n                  <Step.Description>Movie Form</Step.Description>\n                </Step.Content>\n              </Step>\n\n              <Step active={step === 3}>\n                <Icon name='flag checkered' />\n                <Step.Content>\n                  <Step.Title>Complete</Step.Title>\n                  <Step.Description>Preview and complete</Step.Description>\n                </Step.Content>\n              </Step>\n            </Step.Group>\n\n            <Button.Group fluid>\n              <Button\n                disabled={step === 1}\n                onClick={this.handlePreviousStep}>Back</Button>\n              <Button.Or />\n              <Button\n                positive\n                disabled={step === 3}\n                onClick={this.handleNextStep}>Next</Button>\n            </Button.Group>\n\n            {step === 3 && (\n              <>\n                <Divider />\n                <Button fluid color='blue' onClick={this.handleCreateMovie}>Create</Button>\n              </>\n            )}\n          </Grid.Column>\n          <Grid.Column mobile={16} tablet={12} computer={12}>\n            {stepContent}\n          </Grid.Column>\n        </Grid>\n      </Container>\n    )\n  }\n\n  render() {\n    const { keycloak } = this.props\n    return keycloak && keycloak.authenticated && isAdmin(keycloak) ? this.getContent() : <Redirect to='/' />\n  }\n}\n\nexport default withKeycloak(MovieWizard)"]},"metadata":{},"sourceType":"module"}