{"ast":null,"code":"var _jsxFileName = \"/home/bianca/Documents/workspace/repositories/reactapp-movies/springboot-react-keycloak/movies-ui/src/components/movies/MoviesPage.js\";\nimport React, { Component } from 'react';\nimport { withKeycloak } from '@react-keycloak/web';\nimport { Container, Grid, Header, Segment, Icon, Divider } from 'semantic-ui-react';\nimport { handleLogError } from '../misc/Helpers';\nimport { moviesApi } from '../misc/MoviesApi';\nimport MoviesForm from './MoviesForm';\nimport MoviesTable from './MoviesTable';\nimport { isAdmin } from '../misc/Helpers';\nimport { Redirect } from 'react-router-dom';\nimport ConfirmationModal from '../misc/ConfirmationModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MoviesPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.formInitialState = {\n      imdbId: '',\n      title: '',\n      director: '',\n      year: '',\n      poster: '',\n      imdbIdError: false,\n      titleError: false,\n      directorError: false,\n      yearError: false\n    };\n    this.modalInitialState = {\n      isOpen: false,\n      header: '',\n      content: '',\n      onAction: null,\n      onClose: null\n    };\n    this.state = {\n      movies: [],\n      form: { ...this.formInitialState\n      },\n      modal: { ...this.modalInitialState\n      },\n      deleteMovie: null\n    };\n\n    this.handleChange = e => {\n      const {\n        id,\n        value\n      } = e.target;\n      const form = { ...this.state.form\n      };\n      form[id] = value;\n      this.setState({\n        form\n      });\n    };\n\n    this.handleGetMovies = async () => {\n      try {\n        const response = await moviesApi.getMovies();\n        const movies = response.data;\n        this.setState({\n          movies\n        });\n      } catch (error) {\n        handleLogError(error);\n      }\n    };\n\n    this.handleSaveMovie = async () => {\n      if (!this.isValidForm()) {\n        return;\n      }\n\n      const {\n        keycloak\n      } = this.props;\n      const {\n        imdbId,\n        title,\n        director,\n        year,\n        poster\n      } = this.state.form;\n      const movie = {\n        imdbId,\n        title,\n        director,\n        year,\n        poster\n      };\n\n      try {\n        await moviesApi.saveMovie(movie, keycloak.token);\n        this.clearForm();\n        this.handleGetMovies();\n      } catch (error) {\n        handleLogError(error);\n      }\n    };\n\n    this.handleDeleteMovie = movie => {\n      const modal = {\n        isOpen: true,\n        header: 'Delete Movie',\n        content: `Would you like to delete movie '${movie.title}'?`,\n        onAction: this.handleActionModal,\n        onClose: this.handleCloseModal\n      };\n      this.setState({\n        modal,\n        deleteMovie: movie\n      }); // The deletion is done in handleActionModal function\n    };\n\n    this.handleEditMovie = movie => {\n      const form = {\n        imdbId: movie.imdbId,\n        title: movie.title,\n        director: movie.director,\n        year: movie.year,\n        poster: movie.poster,\n        imdbIdError: false,\n        titleError: false,\n        directorError: false,\n        yearError: false\n      };\n      this.setState({\n        form\n      });\n    };\n\n    this.clearForm = () => {\n      this.setState({\n        form: { ...this.formInitialState\n        }\n      });\n    };\n\n    this.isValidForm = () => {\n      const form = { ...this.state.form\n      };\n      const imdbIdError = form.imdbId.trim() === '';\n      const titleError = form.title.trim() === '';\n      const directorError = form.director.trim() === '';\n      const yearError = form.year.trim() === '';\n      form.imdbIdError = imdbIdError;\n      form.titleError = titleError;\n      form.directorError = directorError;\n      form.yearError = yearError;\n      this.setState({\n        form\n      });\n      return imdbIdError || titleError || directorError || yearError ? false : true;\n    };\n\n    this.handleActionModal = async response => {\n      if (response) {\n        const {\n          keycloak\n        } = this.props;\n        const {\n          deleteMovie\n        } = this.state;\n\n        try {\n          await moviesApi.deleteMovie(deleteMovie.imdbId, keycloak.token);\n          this.handleGetMovies();\n        } catch (error) {\n          handleLogError(error);\n        }\n      }\n\n      this.setState({\n        modal: { ...this.modalInitialState\n        }\n      });\n    };\n\n    this.handleCloseModal = () => {\n      this.setState({\n        modal: { ...this.modalInitialState\n        }\n      });\n    };\n  }\n\n  async componentDidMount() {\n    this.handleGetMovies();\n  }\n\n  render() {\n    const {\n      keycloak\n    } = this.props;\n\n    if (!isAdmin(keycloak)) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 14\n      }, this);\n    }\n\n    const {\n      movies,\n      form,\n      modal\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n          mobile: 16,\n          tablet: 16,\n          computer: 4,\n          children: /*#__PURE__*/_jsxDEV(Segment, {\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              as: \"h2\",\n              children: [/*#__PURE__*/_jsxDEV(Icon, {\n                name: \"video camera\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Header.Content, {\n                children: \"Movies\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MoviesForm, {\n              form: form,\n              handleChange: this.handleChange,\n              handleSaveMovie: this.handleSaveMovie,\n              clearForm: this.clearForm\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          mobile: 16,\n          tablet: 16,\n          computer: 12,\n          children: /*#__PURE__*/_jsxDEV(MoviesTable, {\n            movies: movies,\n            handleDeleteMovie: this.handleDeleteMovie,\n            handleEditMovie: this.handleEditMovie\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmationModal, {\n        modal: modal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withKeycloak(MoviesPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/bianca/Documents/workspace/repositories/reactapp-movies/springboot-react-keycloak/movies-ui/src/components/movies/MoviesPage.js"],"names":["React","Component","withKeycloak","Container","Grid","Header","Segment","Icon","Divider","handleLogError","moviesApi","MoviesForm","MoviesTable","isAdmin","Redirect","ConfirmationModal","MoviesPage","formInitialState","imdbId","title","director","year","poster","imdbIdError","titleError","directorError","yearError","modalInitialState","isOpen","header","content","onAction","onClose","state","movies","form","modal","deleteMovie","handleChange","e","id","value","target","setState","handleGetMovies","response","getMovies","data","error","handleSaveMovie","isValidForm","keycloak","props","movie","saveMovie","token","clearForm","handleDeleteMovie","handleActionModal","handleCloseModal","handleEditMovie","trim","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { withKeycloak } from '@react-keycloak/web'\nimport { Container, Grid, Header, Segment, Icon, Divider } from 'semantic-ui-react'\nimport { handleLogError } from '../misc/Helpers'\nimport { moviesApi } from '../misc/MoviesApi'\nimport MoviesForm from './MoviesForm'\nimport MoviesTable from './MoviesTable'\nimport { isAdmin } from '../misc/Helpers'\nimport { Redirect } from 'react-router-dom'\nimport ConfirmationModal from '../misc/ConfirmationModal'\n\nclass MoviesPage extends Component {\n  formInitialState = {\n    imdbId: '',\n    title: '',\n    director: '',\n    year: '',\n    poster: '',\n\n    imdbIdError: false,\n    titleError: false,\n    directorError: false,\n    yearError: false\n  }\n\n  modalInitialState = {\n    isOpen: false,\n    header: '',\n    content: '',\n    onAction: null,\n    onClose: null\n  }\n\n  state = {\n    movies: [],\n    form: { ...this.formInitialState },\n    modal: { ...this.modalInitialState },\n    deleteMovie: null,\n  }\n\n  async componentDidMount() {\n    this.handleGetMovies()\n  }\n\n  handleChange = (e) => {\n    const { id, value } = e.target\n    const form = { ...this.state.form }\n    form[id] = value\n    this.setState({ form })\n  }\n\n  handleGetMovies = async () => {\n    try {\n      const response = await moviesApi.getMovies()\n      const movies = response.data\n      this.setState({ movies })\n    } catch (error) {\n      handleLogError(error)\n    }\n  }\n\n  handleSaveMovie = async () => {\n    if (!this.isValidForm()) {\n      return\n    }\n\n    const { keycloak } = this.props\n    const { imdbId, title, director, year, poster } = this.state.form\n    \n    const movie = { imdbId, title, director, year, poster }\n    try {\n      await moviesApi.saveMovie(movie, keycloak.token)\n      this.clearForm()\n      this.handleGetMovies()\n    } catch (error) {\n      handleLogError(error)\n    }\n  }\n\n  handleDeleteMovie = (movie) => {\n    const modal = {\n      isOpen: true,\n      header: 'Delete Movie',\n      content: `Would you like to delete movie '${movie.title}'?`,\n      onAction: this.handleActionModal,\n      onClose: this.handleCloseModal\n    }\n    this.setState({ modal, deleteMovie: movie })\n    // The deletion is done in handleActionModal function\n  }\n\n  handleEditMovie = (movie) => {\n    const form = {\n      imdbId: movie.imdbId,\n      title: movie.title,\n      director: movie.director,\n      year: movie.year,\n      poster: movie.poster,\n      imdbIdError: false,\n      titleError: false,\n      directorError: false,\n      yearError: false\n    }\n    this.setState({ form })\n  }\n\n  clearForm = () => {\n    this.setState({ form: { ...this.formInitialState } })\n  }\n\n  isValidForm = () => {\n    const form = { ...this.state.form }\n    const imdbIdError = form.imdbId.trim() === ''\n    const titleError = form.title.trim() === ''\n    const directorError = form.director.trim() === ''\n    const yearError = form.year.trim() === ''\n\n    form.imdbIdError = imdbIdError\n    form.titleError = titleError\n    form.directorError = directorError\n    form.yearError = yearError\n\n    this.setState({ form })\n    return (imdbIdError || titleError || directorError || yearError) ? false : true\n  }\n\n  handleActionModal = async (response) => {\n    if (response) {\n      const { keycloak } = this.props\n      const { deleteMovie } = this.state\n\n      try {\n        await moviesApi.deleteMovie(deleteMovie.imdbId, keycloak.token)\n        this.handleGetMovies()\n      } catch (error) {\n        handleLogError(error)\n      }\n    }\n    this.setState({ modal: { ...this.modalInitialState } })\n  }\n\n  handleCloseModal = () => {\n    this.setState({ modal: { ...this.modalInitialState } })\n  }\n\n  render() {\n    const { keycloak } = this.props\n    if (!isAdmin(keycloak)) {\n      return <Redirect to='/' />\n    }\n\n    const { movies, form, modal } = this.state\n    return (\n      <Container>\n        <Grid>\n          <Grid.Column mobile={16} tablet={16} computer={4}>\n            <Segment>\n              <Header as='h2'>\n                <Icon name='video camera' />\n                <Header.Content>Movies</Header.Content>\n              </Header>\n              <Divider />\n              <MoviesForm\n                form={form}\n                handleChange={this.handleChange}\n                handleSaveMovie={this.handleSaveMovie}\n                clearForm={this.clearForm}\n              />\n            </Segment>\n          </Grid.Column>\n          <Grid.Column mobile={16} tablet={16} computer={12}>\n            <MoviesTable\n              movies={movies}\n              handleDeleteMovie={this.handleDeleteMovie}\n              handleEditMovie={this.handleEditMovie}\n            />\n          </Grid.Column>\n        </Grid>\n\n        <ConfirmationModal modal={modal} />\n      </Container>\n    )\n  }\n}\n\nexport default withKeycloak(MoviesPage)"]},"metadata":{},"sourceType":"module"}